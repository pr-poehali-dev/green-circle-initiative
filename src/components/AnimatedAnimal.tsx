
import React from 'react';
import { useEffect, useState } from 'react';

const AnimatedAnimal = () => {
  const [position, setPosition] = useState({ x: 10, y: 10 });
  const [isVisible, setIsVisible] = useState(false);
  const [animalIndex, setAnimalIndex] = useState(0);
  
  // –ö–æ–ª–ª–µ–∫—Ü–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö —Å —ç–º–æ–¥–∑–∏ –∏ –∏–º–µ–Ω–∞–º–∏
  const animals = [
    { emoji: 'ü¶ä', name: '–õ–∏—Å–∞ –ê–ª–∏—Å–∞', image: 'https://images.unsplash.com/photo-1500479694472-551d1fb6258d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&h=300&q=80', color: 'orange-400' },
    { emoji: 'üêµ', name: '–ú–∞—Ä—Ç—ã—à–∫–∞ –ß–∏—Ç–∞', image: 'https://images.unsplash.com/photo-1540573133985-87b6da6d54a9?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300&q=80', color: 'brown-400' },
    { emoji: 'ü¶Å', name: '–õ–µ–≤ –ë–æ–Ω–∏—Ñ–∞—Ü–∏–π', image: 'https://images.unsplash.com/photo-1546182990-dffeafbe841d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300&q=80', color: 'yellow-400' },
    { emoji: 'üêò', name: '–°–ª–æ–Ω –î–∞–º–±–æ', image: 'https://images.unsplash.com/photo-1557050543-4d5f4e07ef46?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300&q=80', color: 'gray-400' },
    { emoji: 'ü¶í', name: '–ñ–∏—Ä–∞—Ñ –ú–µ–ª–º–∞–Ω', image: 'https://images.unsplash.com/photo-1534567110243-8875d64c2cb3?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300&q=80', color: 'yellow-500' }
  ];

  useEffect(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–≤–æ—Ç–Ω–æ–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const showTimer = setTimeout(() => {
      setIsVisible(true);
    }, 800);

    // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    const animationTimer = setInterval(() => {
      // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
      const newX = Math.floor(Math.random() * 70);
      setPosition({ x: newX, y: 5 + Math.floor(Math.random() * 15) });
      
      // –ú–µ–Ω—è–µ–º –∂–∏–≤–æ—Ç–Ω–æ–µ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏
      setAnimalIndex((prev) => (prev + 1) % animals.length);
    }, 4000);

    return () => {
      clearTimeout(showTimer);
      clearInterval(animationTimer);
    };
  }, []);

  const currentAnimal = animals[animalIndex];
  
  // CSS –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
  const animalStyle = {
    position: 'absolute',
    left: `${position.x}%`,
    top: `${position.y}%`,
    transition: 'left 2s ease-in-out, top 2s ease-in-out, opacity 1s ease-in-out, transform 0.3s ease',
    opacity: isVisible ? 1 : 0,
    zIndex: 10,
    transform: 'scale(1)',
  };

  return (
    <div 
      style={animalStyle as React.CSSProperties} 
      className="hidden md:block cursor-pointer"
      onMouseEnter={(e) => {
        e.currentTarget.style.transform = 'scale(1.1)';
      }}
      onMouseLeave={(e) => {
        e.currentTarget.style.transform = 'scale(1)';
      }}
    >
      <div className="relative group">
        <img 
          src={currentAnimal.image} 
          alt={currentAnimal.name} 
          className={`w-28 h-28 object-cover rounded-full border-4 border-${currentAnimal.color} transition-all shadow-lg group-hover:shadow-xl`}
        />
        <div className="absolute -bottom-2 -right-2 bg-white rounded-full p-1 shadow-md">
          <span role="img" aria-label={currentAnimal.name} className="text-xl">{currentAnimal.emoji}</span>
        </div>
        
        {/* –ò–º—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤—Å–ø–ª—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
        <div className="absolute -bottom-10 left-0 right-0 opacity-0 group-hover:opacity-100 transition-opacity bg-white rounded-full py-1 px-3 shadow-md text-center text-sm font-medium">
          {currentAnimal.name}
        </div>
      </div>
    </div>
  );
};

export default AnimatedAnimal;
