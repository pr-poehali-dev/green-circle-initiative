import json
import random
from typing import Dict, Any

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ –∫–æ—Å–º–æ—Å–µ
    Args: event - HTTP –∑–∞–ø—Ä–æ—Å, context - –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    Returns: –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—Å–º–æ—Å–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    '''
    method: str = event.get('httpMethod', 'GET')
    
    # Handle CORS OPTIONS request
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'GET, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    # –ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã
    space_facts = [
        {
            "fact": "–û–¥–∏–Ω –¥–µ–Ω—å –Ω–∞ –í–µ–Ω–µ—Ä–µ –¥–ª–∏—Ç—Å—è –¥–æ–ª—å—à–µ, —á–µ–º –≥–æ–¥ –Ω–∞ –í–µ–Ω–µ—Ä–µ",
            "explanation": "–í–µ–Ω–µ—Ä–∞ –≤—Ä–∞—â–∞–µ—Ç—Å—è –≤–æ–∫—Ä—É–≥ —Å–≤–æ–µ–π –æ—Å–∏ –∑–∞ 243 –∑–µ–º–Ω—ã—Ö –¥–Ω—è, –Ω–æ –æ–±–ª–µ—Ç–∞–µ—Ç –°–æ–ª–Ω—Ü–µ –∑–∞ 225 –¥–Ω–µ–π",
            "category": "–ø–ª–∞–Ω–µ—Ç—ã"
        },
        {
            "fact": "–í –∫–æ—Å–º–æ—Å–µ –Ω–µ–ª—å–∑—è –ø–ª–∞–∫–∞—Ç—å –∫–∞–∫ –Ω–∞ –ó–µ–º–ª–µ",
            "explanation": "–ë–µ–∑ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏ —Å–ª—ë–∑—ã –Ω–µ —Å—Ç–µ–∫–∞—é—Ç –ø–æ —â–µ–∫–∞–º, –∞ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ –ø—É–∑—ã—Ä–µ–π –Ω–∞ –≥–ª–∞–∑–∞—Ö",
            "category": "—Ñ–∏–∑–∏–∫–∞"
        },
        {
            "fact": "–ù–µ–π—Ç—Ä–æ–Ω–Ω–∞—è –∑–≤–µ–∑–¥–∞ —Ä–∞–∑–º–µ—Ä–æ–º —Å –≥–æ—Ä–æ–¥ –º–æ–∂–µ—Ç –≤–µ—Å–∏—Ç—å –±–æ–ª—å—à–µ –°–æ–ª–Ω—Ü–∞",
            "explanation": "–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–µ–π—Ç—Ä–æ–Ω–Ω–æ–π –∑–≤–µ–∑–¥—ã –Ω–∞—Å—Ç–æ–ª—å–∫–æ –≤–µ–ª–∏–∫–∞, —á—Ç–æ —á–∞–π–Ω–∞—è –ª–æ–∂–∫–∞ –µ—ë –≤–µ—â–µ—Å—Ç–≤–∞ –≤–µ—Å–∏–ª–∞ –±—ã –º–∏–ª–ª–∏–∞—Ä–¥—ã —Ç–æ–Ω–Ω",
            "category": "–∑–≤—ë–∑–¥—ã"
        },
        {
            "fact": "–ù–∞ –ú–∞—Ä—Å–µ –∑–∞–∫–∞—Ç—ã –≥–æ–ª—É–±—ã–µ, –∞ –Ω–µ–±–æ –∫—Ä–∞—Å–Ω–æ–µ",
            "explanation": "–ò–∑-–∑–∞ —Å–æ—Å—Ç–∞–≤–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –∏ –ø—ã–ª–∏ –≤ –≤–æ–∑–¥—É—Ö–µ —Ü–≤–µ—Ç–∞ –Ω–µ–±–∞ –Ω–∞ –ú–∞—Ä—Å–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã –∑–µ–º–Ω—ã–º",
            "category": "–ø–ª–∞–Ω–µ—Ç—ã"
        },
        {
            "fact": "–ì–∞–ª–∞–∫—Ç–∏–∫–∞ –ú–ª–µ—á–Ω—ã–π –ü—É—Ç—å –¥–≤–∏–∂–µ—Ç—Å—è —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 600 –∫–º/—Å",
            "explanation": "–ù–∞—à–∞ –≥–∞–ª–∞–∫—Ç–∏–∫–∞ –Ω–µ—Å—ë—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ—Å–º–æ—Å –∫ —Å–æ–∑–≤–µ–∑–¥–∏—é –ì–∏–¥—Ä—ã —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é",
            "category": "–≥–∞–ª–∞–∫—Ç–∏–∫–∏"
        },
        {
            "fact": "–ù–∞ –ú–ö–° –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—ã –≤—Å—Ç—Ä–µ—á–∞—é—Ç —Ä–∞—Å—Å–≤–µ—Ç –∏ –∑–∞–∫–∞—Ç –∫–∞–∂–¥—ã–µ 90 –º–∏–Ω—É—Ç",
            "explanation": "–°—Ç–∞–Ω—Ü–∏—è –æ–±–ª–µ—Ç–∞–µ—Ç –ó–µ–º–ª—é –∑–∞ 90 –º–∏–Ω—É—Ç, –ø–æ—ç—Ç–æ–º—É —ç–∫–∏–ø–∞–∂ –≤–∏–¥–∏—Ç 16 —Ä–∞—Å—Å–≤–µ—Ç–æ–≤ –∏ –∑–∞–∫–∞—Ç–æ–≤ –≤ —Å—É—Ç–∫–∏",
            "category": "–∫–æ—Å–º–æ–Ω–∞–≤—Ç–∏–∫–∞"
        },
        {
            "fact": "–Æ–ø–∏—Ç–µ—Ä –∑–∞—â–∏—â–∞–µ—Ç –ó–µ–º–ª—é –æ—Ç –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤",
            "explanation": "–ú–æ—â–Ω–∞—è –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è –Æ–ø–∏—Ç–µ—Ä–∞ –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –∫ —Å–µ–±–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–ø–∞—Å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ –∫–æ—Å–º–æ—Å–∞",
            "category": "–ø–ª–∞–Ω–µ—Ç—ã"
        },
        {
            "fact": "–í—Ä–µ–º—è –≤ –∫–æ—Å–º–æ—Å–µ –∏–¥—ë—Ç –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –Ω–∞ –ó–µ–º–ª–µ",
            "explanation": "–°–æ–≥–ª–∞—Å–Ω–æ —Ç–µ–æ—Ä–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è –∑–∞–º–µ–¥–ª—è–µ—Ç –≤—Ä–µ–º—è. –í –∫–æ—Å–º–æ—Å–µ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è —Å–ª–∞–±–µ–µ",
            "category": "—Ñ–∏–∑–∏–∫–∞"
        }
    ]
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç
    selected_fact = random.choice(space_facts)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    query_params = event.get('queryStringParameters', {}) or {}
    category_filter = query_params.get('category')
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
    if category_filter:
        filtered_facts = [f for f in space_facts if f['category'] == category_filter]
        if filtered_facts:
            selected_fact = random.choice(filtered_facts)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    result = {
        'success': True,
        'timestamp': context.request_id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º request_id –∫–∞–∫ timestamp
        'total_facts': len(space_facts),
        'categories': list(set(f['category'] for f in space_facts)),
        'fact_data': selected_fact,
        'fun_bonus': f"üöÄ –§–∞–∫—Ç #{random.randint(1, 1000)}",
        'request_info': {
            'function_name': 'space-facts',
            'method': method,
            'filtered_by': category_filter or 'none'
        }
    }
    
    return {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*'
        },
        'isBase64Encoded': False,
        'body': json.dumps(result, ensure_ascii=False)
    }